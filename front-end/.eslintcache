[{"/workspace/react-gitpod-test/hello-world/src/reportWebVitals.js":"1","/workspace/react-gitpod-test/hello-world/src/App.js":"2","/workspace/react-gitpod-test/hello-world/src/index.js":"3","/workspace/react-gitpod-test/hello-world/src/FormElements.jsx":"4"},{"size":362,"mtime":1607159595000,"results":"5","hashOfConfig":"6"},{"size":3357,"mtime":1607223340747,"results":"7","hashOfConfig":"6"},{"size":500,"mtime":1607159595000,"results":"8","hashOfConfig":"6"},{"size":2271,"mtime":1607159595000,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"17beux6",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"/workspace/react-gitpod-test/hello-world/src/reportWebVitals.js",[],["20","21"],"/workspace/react-gitpod-test/hello-world/src/App.js",[],"/workspace/react-gitpod-test/hello-world/src/index.js",[],"/workspace/react-gitpod-test/hello-world/src/FormElements.jsx",["22","23"],"import React from 'react';\nimport {\n    Formik,\n    Form as FormikForm,\n    Field,\n    ErrorMessage,\n    useFormikContext,\n// eslint-disable-next-line\n    useField,\n// eslint-disable-next-line\n    useFormik\n} from 'formik';\n\nimport {\n    MapContainer,\n    TileLayer,\n    Marker,\n    Popup\n} from 'react-leaflet';\n\nexport function Form(props) {\n    return (\n        <Formik\n            {...props}\n        >\n            <FormikForm className=\"needs-validation\" novalidate=\"\">\n                {props.children}\n            </FormikForm>\n        </Formik>)\n}\n\nexport function TextField(props) {\n    const { name, label, placeholder, ...rest } = props\n    return (\n        <>\n            {label && <label for={name}>{label}</label>}\n            <Field\n                className=\"form-control\"\n                type=\"text\"\n                name={name}\n                id={name}\n                placeholder={placeholder || \"\"} \n                {...rest}\n            />\n            <ErrorMessage name={name} render={msg => <div style={{ color: 'red' }} >{msg}</div>} />\n        </>\n    )\n}\n\nexport function SelectField(props) {\n    const { name, label, options } = props\n    return (\n        <>\n            {label && <label for={name}>{label}</label>}\n            <Field\n                as=\"select\"\n                id={name}\n                name={name}\n            >\n                <option value=\"\" >Choose...</option>\n                {options.map((optn, index) => <option value={optn.value} label={optn.label || optn.value} />)}\n            </Field>\n            <ErrorMessage name={name} render={msg => <div style={{ color: 'red' }} >{msg}</div>} />\n        </>\n    )\n}\n\nexport function SubmitButton(props){\n    const { label, ...rest } = props;\n    const { isSubmitting } = useFormikContext();\n    \n    return (\n        <button type=\"submit\" {...rest} disabled={isSubmitting}>{label}</button>\n    )\n}\n\nexport function LeafletMap(props){\n    const { lat, lon, zoom } = props.options\n    return (\n        <MapContainer center={[lat, lon]} zoom={zoom}>\n        <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        </MapContainer>\n    )\n}",{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":17,"column":5,"nodeType":"30","messageId":"31","endLine":17,"endColumn":11},{"ruleId":"28","severity":1,"message":"32","line":18,"column":5,"nodeType":"30","messageId":"31","endLine":18,"endColumn":10},"no-native-reassign",["33"],"no-negated-in-lhs",["34"],"no-unused-vars","'Marker' is defined but never used.","Identifier","unusedVar","'Popup' is defined but never used.","no-global-assign","no-unsafe-negation"]